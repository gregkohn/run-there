/*! normalize.css v5.0.0 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Correct the line height in all browsers.
 * 3. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
/* Document
   ========================================================================== */
html {
  font-family: sans-serif;
  /* 1 */
  line-height: 1.15;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 3 */
  -webkit-text-size-adjust: 100%;
  /* 3 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */
figcaption,
figure,
main {
  /* 1 */
  display: block; }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */
a:active,
a:hover {
  outline-width: 0; }

/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */
details,
menu {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block; }

/**
 * Add the correct display in IE.
 */
template {
  display: none; }

/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none; }

body {
  background-color: #292d3e;
  font-family: Brandon Grotesque, Proxima Nova, sans-serif;
  font-weight: 300;
  height: 100vh;
  overflow: hidden; }

html[data-whatinput="mouse"] *:focus {
  outline: none; }

html {
  box-sizing: border-box; }

*, *:before, *:after {
  box-sizing: inherit; }

button {
  border: 0;
  background: none;
  cursor: pointer;
  font-family: inherit; }

input {
  font-family: inherit; }

a,
a:hover
a:focus {
  color: inherit;
  text-decoration: none; }

body, h1, h2, h3, h4, h5, h6 {
  font-size: 16px;
  font-weight: normal;
  margin: 0; }

.-pink {
  color: #f83e7d; }

.-orange {
  color: #ff7140; }

.-turquoise {
  color: #3bed97; }

.-yellow {
  color: #f7cb69; }

.container {
  margin: 0 auto;
  max-width: 1400px;
  padding: 1px 16px; }
  .container.-medium {
    max-width: 1100px; }

.sr-only {
  position: absolute !important;
  clip: rect(1px 1px 1px 1px);
  /* IE6, IE7 */
  clip: rect(1px, 1px, 1px, 1px); }

.add-run {
  position: relative; }

.add-btn {
  -ms-flex-align: center;
      align-items: center;
  display: -ms-flexbox;
  display: flex; }
  .add-btn svg {
    fill: currentColor;
    margin-right: 8px;
    stroke: currentColor;
    stroke-width: 2px;
    transition: transform 0.4s;
    width: 15px; }
  .add-btn:hover svg,
  html[data-whatinput="keyboard"] .add-btn:focus svg {
    -ms-transform: rotate(90deg);
        transform: rotate(90deg); }

.button {
  background-color: #f7cb69;
  color: #292d3e;
  font-size: 20px;
  font-weight: 700;
  opacity: 0.5;
  padding: 8px 16px;
  transition: opacity 0.4s; }
  .button:hover,
  html[data-whatinput="keyboard"] .button:focus {
    box-shadow: 0 0 20px #222;
    opacity: 1;
    outline: none; }

.cards {
  padding-left: 24px;
  transition: -webkit-filter 0.4s;
  transition: filter 0.4s;
  transition: filter 0.4s, -webkit-filter 0.4s; }

.card-row {
  -ms-flex-align: center;
      align-items: center;
  display: -ms-flexbox;
  display: flex;
  padding: 8px; }
  .card-row.-smaller {
    border-top: 2px solid #212432;
    -ms-flex-pack: center;
        justify-content: center;
    margin: 16px;
    text-align: center; }
    .card-row.-smaller .card__body {
      margin-bottom: 8px; }

.card-progress {
  height: 70px;
  position: relative;
  -ms-transform: rotate(-90deg);
      transform: rotate(-90deg);
  width: 70px; }
  .card-progress svg {
    fill: none;
    left: 0;
    position: absolute;
    stroke-width: 10px;
    stroke: currentColor;
    top: 0;
    width: 70px; }

.card-progress__total {
  opacity: 0.2; }

.card-progress__completed {
  stroke-dasharray: 314;
  stroke-dashoffset: 314; }

.card-icon {
  stroke: currentColor;
  width: 70px;
  fill: currentColor; }

.card {
  margin: 12px; }
  .card.-faded {
    opacity: 0.3; }

.card__title {
  color: rgba(255, 255, 255, 0.5);
  margin-top: -10px;
  padding: 0 10px; }

.card__body {
  font-size: 100px;
  line-height: 1; }

.header {
  position: absolute;
  top: 8px;
  right: 8px; }

.sprite.-logo svg {
  width: 80px;
  color: #3bed97; }

.map {
  -ms-flex-align: start;
      align-items: flex-start;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-positive: 1;
      flex-grow: 1;
  -ms-flex-pack: center;
      justify-content: center;
  position: relative;
  padding-top: 100px;
  transition: -webkit-filter 0.4s;
  transition: filter 0.4s;
  transition: filter 0.4s, -webkit-filter 0.4s; }

.map__bg svg {
  position: absolute;
  top: 0;
  pointer-events: none;
  right: 0;
  width: 800px; }

.map__current-state {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
      justify-content: center;
  -ms-flex-align: center;
      align-items: center;
  padding: 8px 16px;
  background: #212432;
  position: relative;
  z-index: 2; }

.map__current-state__icon {
  width: 100px;
  height: 100px;
  border-radius: 50%;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
      justify-content: center;
  -ms-flex-align: center;
      align-items: center;
  margin-right: 24px;
  background-color: #292d3e;
  box-shadow: inset 0 0 10px #212432; }
  .map__current-state__icon svg {
    width: 60px;
    fill: #f83e7d; }

.map__current-state__text {
  position: relative;
  z-index: 2;
  color: rgba(255, 255, 255, 0.5); }

.map__current-state__label {
  font-size: 14px;
  text-transform: lowercase;
  margin-bottom: 4px; }

.map__current-state__name {
  color: #fff;
  font-size: 30px; }

.-usa-mexico {
  opacity: 0.1; }
  .-usa-mexico svg {
    stroke: #fff; }

.-total-route svg {
  stroke: rgba(248, 62, 125, 0.2); }

.-progress-route svg {
  stroke: #f83e7d;
  stroke-dasharray: 807;
  stroke-dashoffset: 807;
  transition: stroke-dashoffset 3s; }

@keyframes dash {
  to {
    stroke-dashoffset: 705; } }

.modal-container {
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.4s 0.4s, visibility 0.4s 0.4s;
  -ms-flex-align: center;
      align-items: center;
  background-color: rgba(33, 36, 50, 0.9);
  display: -ms-flexbox;
  display: flex;
  height: 100%;
  -ms-flex-pack: center;
      justify-content: center;
  left: 0;
  position: fixed;
  top: 0;
  width: 100%;
  z-index: 2; }
  .-modal-is-active .modal-container {
    opacity: 1;
    visibility: visible;
    transition: opacity 0.4s 0s, visibility 0.4s 0s; }

.modal-close {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1; }

.modal-dialog {
  opacity: 0;
  visibility: hidden;
  background-color: #292d3e;
  padding: 32px 80px;
  position: relative;
  transform: translate3d(0, -20px, 0);
  transition: all 0.4s 0s;
  z-index: 2; }
  .-modal-is-active .modal-dialog {
    opacity: 1;
    visibility: visible;
    transform: translate3d(0, 0, 0);
    transition: all 0.4s 0.4s; }

.modal-dialog__title {
  color: #f7cb69;
  font-size: 20px;
  font-weight: 700;
  text-align: center;
  text-transform: lowercase; }

.modal-dialog__form {
  color: rgba(255, 255, 255, 0.8);
  margin-top: 24px; }
  .modal-dialog__form input {
    background: none;
    border: none;
    border-bottom: 2px solid rgba(255, 255, 255, 0.05);
    color: #fff;
    font-size: 28px;
    margin-right: 16px;
    padding: 16px;
    text-align: center;
    width: 100px; }

.modal-dialog__submit {
  margin-top: 40px;
  text-align: center; }

.page-content {
  display: -ms-flexbox;
  display: flex;
  min-height: 100vh; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
